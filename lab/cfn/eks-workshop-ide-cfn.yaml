---
AWSTemplateFormatVersion: "2010-09-09"
Description: Creates a Cloud9 IDE for the EKS workshop
Parameters:
  EksWorkshopC9InstanceType:
    Description: Cloud9 instance type
    Type: String
    Default: t3.small
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3.small
      - t3.medium
    ConstraintDescription: Must be a valid Cloud9 instance type
  EksWorkshopC9EnvType:
    Description: Environment type.
    Default: self
    Type: String
    AllowedValues:
      - self
      - 3rdParty
    ConstraintDescription: must specify self or 3rdParty.
  WorkshopOwnerArn:
    Type: String
    Description: The Arn of the Cloud9 Owner to be set if 3rdParty deployment.
    Default: ""
  EksWorkshopC9InstanceVolumeSize:
    Type: Number
    Description: The Size in GB of the Cloud9 Instance Volume.
    Default: 30
  RepositoryOwner:
    Type: String
    Description: The owner of the GitHub repository to be used to bootstrap Cloud9
    Default: "aws-samples"
  RepositoryName:
    Type: String
    Description: The name of the GitHub repository to be used to bootstrap Cloud9
    Default: "eks-workshop-v2"
  RepositoryRef:
    Type: String
    Description: The Git reference to be used to bootstrap Cloud9
    Default: "main"
  Cloud9Name:
    Type: String
    Description: Name of the Cloud9 instance
    Default: "none"
  Cloud9Subnet:
    Type: String
    Description: If you want Cloud9 in a specific subnet
    Default: "none"
  ResourcesPrecreated:
    Type: String
    Description: Whether lab infrastructure has been pre-provisioned
    Default: "false"
    AllowedValues:
      - "false"
      - "true"
  UpdateTrigger:
    Type: String
    Description: Triggers the Cloud9 to update itself
    Default: "0"
  AnalyticsEndpoint:
    Type: String
    Description: Analytics endpoint used for AWS events
    Default: ""

Conditions:
  Create3rdPartyResources: !Equals [!Ref EksWorkshopC9EnvType, 3rdParty]
  IsCloud9NotNamed: !Equals [!Ref Cloud9Name, none]
  IsCloud9SubnetSpecified: !Not [!Equals [!Ref Cloud9Subnet, none]]

Resources:
  EksWorkshopC9SSMDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      DocumentFormat: YAML
      Content:
        schemaVersion: "2.2"
        description: Bootstrap Cloud9 Instance
        mainSteps:
          - action: aws:runShellScript
            name: EksWorkshopC9bootstrap
            inputs:
              runCommand:
                - !Sub |
                  set -e

                  export AWS_REGION="${AWS::Region}"
                  export REPOSITORY_OWNER="${RepositoryOwner}"
                  export REPOSITORY_NAME="${RepositoryName}"
                  export REPOSITORY_REF="${RepositoryRef}"
                  export CLOUD9_ENVIRONMENT_ID="${EksWorkshopC9Instance}"
                  export RESOURCES_PRECREATED="${ResourcesPrecreated}"
                  export ANALYTICS_ENDPOINT="${AnalyticsEndpoint}"

                  curl -fsSL https://raw.githubusercontent.com/${RepositoryOwner}/${RepositoryName}/${RepositoryRef}/lab/scripts/installer.sh | bash

                  sudo -E -H -u ec2-user bash -c "curl -fsSL https://raw.githubusercontent.com/${RepositoryOwner}/${RepositoryName}/${RepositoryRef}/lab/scripts/setup.sh | bash"

  #------------------------------------------------------
# Exported output
#------------------------------------------------------ 
Outputs:
  VSCodeServerCloudFrontDomainName:
    Value: 
      !Sub 
        - "https://${domain}"
        - { domain: !GetAtt VSCodeServerCloudFront.DomainName }
    Export:
      Name: !Sub ${AWS::StackName}-domain-name
  VSCodeServerPrivateIP:
    Value: !GetAtt VSCodeServer.PrivateIp
    Export:
      Name: !Sub ${AWS::StackName}-code-server-private-ip
  VSCodeServerRoleARN:
    Value: !GetAtt VSCodeServerIAMRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-code-server-role-arn
  VSCodeServerInstanceId:
    Value: !Ref VSCodeServer
    Export:
      Name: !Sub ${AWS::StackName}-code-server-instance-id
