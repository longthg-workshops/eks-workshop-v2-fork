#------------------------------------------------------
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0 
#------------------------------------------------------
AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy a vscode-server on an ec2 
#------------------------------------------------------
# Parameters
#------------------------------------------------------
Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16
  PublicSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.10.0/24
  PrivateSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.20.0/24
#------------------------------------------------------
# Key pair params
#------------------------------------------------------
  SshKeyName:
    Type: String
    Description: The name of the SSH Key
#------------------------------------------------------
# Server params
#------------------------------------------------------
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  LatestAmiId:
    Description: latest image id for ubuntu
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>" 
    Default: "/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id" 
  InternetCidrBlock:
    Type: String
    Description: UserCidrBlock
    Default: 0.0.0.0/0
  VSCodeServerVersion:
    Type: String
    Description: VSCodeServerVersion
    Default: 4.91.1
  OriginRequestPolicyId: 
    Type: String
    Description: origin request policy id
    Default: 216adef6-5c7f-47e4-b989-5492eafa07d3
#------------------------------------------------------
# Lab params
#------------------------------------------------------
  ResourcesPrecreated:
    Type: String
    Description: Whether lab infrastructure has been pre-provisioned
    Default: "false"
    AllowedValues:
      - "false"
      - "true"
  RepositoryOwner:
    Type: String
    Description: The owner of the GitHub repository to be used to bootstrap Cloud9
    Default: "longthg-workshops"
  RepositoryName:
    Type: String
    Description: The name of the GitHub repository to be used to bootstrap Cloud9
    Default: "eks-workshop-v2-fork"
  RepositoryRef:
    Type: String
    Description: The Git reference to be used to bootstrap Cloud9
    Default: "cloud-ide"
  LocalFolder:
    Type: String
    Description: Where to clone and run the repo
    Default: "${HOME}/eks-workshop-aws"
Resources:
#------------------------------------------------------
# VPC and Subnet
#------------------------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

#------------------------------------------------------
# Security Group
#------------------------------------------------------
  VSCodeServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W5
            reason: allow ingress from the cloudfront prefix list
    Properties:
      GroupDescription: allow ingress from cloudfront prefix list
      VpcId: !Ref VPC

  VSCodeServerSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: open port 22 for ssh
      GroupId: 
        Fn::GetAtt:
          - VSCodeServerSecurityGroup
          - GroupId
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0

  VSCodeServerSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: egress for vscode security group
      GroupId:
        Fn::GetAtt:
          - VSCodeServerSecurityGroup
          - GroupId
      IpProtocol: -1
      CidrIp: !Ref InternetCidrBlock
#------------------------------------------------------
# Role and Instance Profile
#------------------------------------------------------
  VSCodeServerIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: VSCodeServerIAMRole
#------------------------------------------------------
# EC2 Instance for VSCode Server
#------------------------------------------------------
  VSCodeServer:
    Type: AWS::EC2::Instance
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W5
            reason: allow tcp 8080 from the cloudfront prefix list
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfile
      KeyName: !Sub ${SshKeyName}
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-vscode-instance
      NetworkInterfaces:
        - DeviceIndex: "0"
          AssociatePublicIpAddress: "true"
          SubnetId: !Ref PublicSubnet
          GroupSet:
            - Fn::GetAtt:
                - VSCodeServerSecurityGroup
                - GroupId
      Monitoring: true
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash
              AWS_REGION="${AWS::Region}"
              curl -fsSL https://raw.githubusercontent.com/${REPOSITORY_OWNER}/${REPOSITORY_NAME}/${REPOSITORY_REF}/lab/scripts/installer.sh | bash
              sudo -E -H -u ubuntu bash -c "curl -fsSL https://raw.githubusercontent.com/${REPOSITORY_OWNER}/${REPOSITORY_NAME}/${REPOSITORY_REF}/lab/scripts/setup.sh | bash"
              curl -fOL https://github.com/coder/code-server/releases/download/v${VERSION}/code-server_${VERSION}_amd64.deb
              sudo dpkg -i code-server_${VERSION}_amd64.deb
              sudo systemctl enable --now code-server@ubuntu
              sleep 30
              sed -i.bak 's/auth: password/auth: none/' /home/ubuntu/.config/code-server/config.yaml
              sudo systemctl restart code-server@ubuntu
            - VERSION: !Ref VSCodeServerVersion
              ENVIRONMENT: !Ref LocalFolder
              REPOSITORY_OWNER: !Ref RepositoryOwner
              REPOSITORY_NAME: !Ref RepositoryName
              REPOSITORY_REF: !Ref RepositoryRef
              RESOURCES_PRECREATED: !Ref ResourcesPrecreated

#------------------------------------------------------
# Exported output
#------------------------------------------------------ 
Outputs:
  VSCodeServerPublicIP:
    Value: !GetAtt VSCodeServer.PublicIp
    Export:
      Name: !Sub ${AWS::StackName}-code-server-public-ip
  VSCodeServerRoleARN:
    Value: !GetAtt VSCodeServerIAMRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-code-server-role-arn
  VSCodeServerInstanceId:
    Value: !Ref VSCodeServer
    Export:
      Name: !Sub ${AWS::StackName}-code-server-instance-id
